/* Generated By:JavaCC: Do not edit this line. DoggoConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DoggoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENTAIRES = 6;
  /** RegularExpression Id. */
  int PROGRAMME = 7;
  /** RegularExpression Id. */
  int FONCTION = 8;
  /** RegularExpression Id. */
  int PROCEDURE = 9;
  /** RegularExpression Id. */
  int PRINCIPALE = 10;
  /** RegularExpression Id. */
  int DEBUT = 11;
  /** RegularExpression Id. */
  int RETOUR = 12;
  /** RegularExpression Id. */
  int FIN = 13;
  /** RegularExpression Id. */
  int ECRITURE = 14;
  /** RegularExpression Id. */
  int AFFICHER = 15;
  /** RegularExpression Id. */
  int SICOND_SI = 16;
  /** RegularExpression Id. */
  int SICOND_ALORS = 17;
  /** RegularExpression Id. */
  int SICOND_FIN_SI = 18;
  /** RegularExpression Id. */
  int SICOND_SINON = 19;
  /** RegularExpression Id. */
  int BOUCLE_TANT_QUE = 20;
  /** RegularExpression Id. */
  int BOUCLE_FAIRE = 21;
  /** RegularExpression Id. */
  int BOUCLE_FAIT = 22;
  /** RegularExpression Id. */
  int INCREMENT = 23;
  /** RegularExpression Id. */
  int DECREMENT = 24;
  /** RegularExpression Id. */
  int TYPE = 25;
  /** RegularExpression Id. */
  int IDENTIFIANT = 26;
  /** RegularExpression Id. */
  int SIGNE_AFFECTER = 27;
  /** RegularExpression Id. */
  int VALEUR_ENTIER = 28;
  /** RegularExpression Id. */
  int VALEUR_FLOTANT = 29;
  /** RegularExpression Id. */
  int VALEUR_CHAINE = 30;
  /** RegularExpression Id. */
  int VALEUR_BOOLEEN = 31;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<COMMENTAIRES>",
    "\"programme\"",
    "\"fonction\"",
    "\"procedure\"",
    "\"principale\"",
    "\"debut\"",
    "\"retour\"",
    "\"fin\"",
    "\"ecrire\"",
    "\"afficher\"",
    "\"si\"",
    "\"alors\"",
    "\"fin si\"",
    "\"sinon\"",
    "\"tant que\"",
    "\"faire\"",
    "\"fait\"",
    "\"++\"",
    "\"--\"",
    "<TYPE>",
    "<IDENTIFIANT>",
    "\":=\"",
    "<VALEUR_ENTIER>",
    "<VALEUR_FLOTANT>",
    "<VALEUR_CHAINE>",
    "<VALEUR_BOOLEEN>",
    "\"(\"",
    "\",\"",
    "\")\"",
    "\";\"",
    "\"et\"",
    "\"ou\"",
    "\"non\"",
    "\"=\"",
    "\"<>\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\", \"",
  };

}
